<?xml version="1.0" encoding="utf-8"?>

<WPF:MainWindow xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                x:Name="FileWindow"
                xmlns:WPF="clr-namespace:CreateObject.WPF;assembly=CreateObject"
                AllowsTransparency="False" Background="#F0F0F0" ResizeMode="NoResize" SizeToContent="WidthAndHeight">
    <Window.Resources>
        <Style x:Key="DynamicDataGridCellStyle" TargetType="{x:Type DataGridCell}">
            <Setter Property="KeyboardNavigation.IsTabStop" Value="False" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate>
                        <ComboBox ItemsSource="{Binding ListValues}"
                                  Text="{WPF:ValidatedBinding Value, StringFormat=N}" IsEditable="True"
                                  BorderThickness="0" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                    <Setter Property="Foreground"
                            Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                    <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                </Trigger>
                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                    <Setter Property="BorderBrush" Value="{DynamicResource {x:Static DataGrid.FocusBorderBrushKey}}" />
                </Trigger>
                <DataTrigger Binding="{Binding EnforceListValues}" Value="True">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <ComboBox ItemsSource="{Binding ListValues}" Text="{WPF:ValidatedBinding Value}"
                                  IsEditable="False" BorderThickness="0"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding ListValues.Count}" Value="0">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <TextBox Text="{WPF:ValidatedBinding Value, StringFormat=N}" BorderThickness="0" CharacterCasing="{Binding Case}" />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding Typ}" Value="DateTime">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <DatePicker SelectedDate="{WPF:ValidatedBinding Value}" SelectedDateFormat="Short"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding Typ}" Value="Bool">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <ComboBox Text="{WPF:ValidatedBinding Value}" IsEditable="True">
                                    <ComboBoxItem Content="True" />
                                    <ComboBoxItem Content="False" />
                                </ComboBox>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="DynamicDataGridLabelStyle" TargetType="{x:Type DataGridCell}">
            <Setter Property="KeyboardNavigation.IsTabStop" Value="False" />
            <Setter Property="Height" Value="22" />
            <Setter Property="Margin" Value="0,4,0,0" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="IsHitTestVisible" Value="False" />
        </Style>
        <Style x:Key="DynamicDataGridBtnCellStyle" TargetType="{x:Type DataGridCell}">
            <Setter Property="KeyboardNavigation.IsTabStop" Value="False" />
            <Setter Property="IsHitTestVisible" Value="False" />
            <Setter Property="Width" Value="0"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Name}" Value="Part Number">
                    <Setter Property="IsHitTestVisible" Value="True" />
                    <Setter Property="Width" Value="Auto"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Button Content="{Binding DataContext.UIString[], FallbackValue=. . ., RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" 
                                    Command="{Binding DataContext.PsCmd[mInitializeItemSearch -Context Part_Number], RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" 
                                       CommandParameter="Part Number" HorizontalAlignment="Right"
                                    ToolTip="{Binding DataContext.UIString[Adsk.QS.ItemSearch_10], FallbackValue='Expand Item Query Builder', RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" 
                                    Grid.Column="1" Padding="5,1" Background="#FFDDDDDD" MinWidth="20"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding Name}" Value="Stock Number">
                    <Setter Property="IsHitTestVisible" Value="True" />
                    <Setter Property="Width" Value="Auto"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Button Content="{Binding DataContext.UIString[], FallbackValue=. . ., RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" 
                                    Command="{Binding DataContext.PsCmd[mInitializeItemSearch -Context Stock_Number], RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" 
                                       CommandParameter="Stock Number" HorizontalAlignment="Right"
                                    ToolTip="{Binding DataContext.UIString[Adsk.QS.ItemSearch_10], FallbackValue='Expand Item Query Builder', RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" 
                                    Grid.Column="1" Padding="5,1" Background="#FFDDDDDD" MinWidth="20"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type Label}" BasedOn="{StaticResource {x:Type Label}}">
            <Setter Property="Margin" Value="0,0,0,0" />
            <Setter Property="Height" Value="24" />
            <Setter Property="Padding" Value="5,3,3,2" />
            <Setter Property="VerticalAlignment" Value="Stretch" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="BorderBrush" Value="#FFABADB3" />
            <Setter Property="BorderThickness" Value="1,1,1,0" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding Content, RelativeSource={RelativeSource Self}}" Value="{x:Null}">
                    <Setter Property="BorderThickness" Value="1" />
                    <Setter Property="BorderBrush" Value="#ff0000" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
            <Setter Property="Margin" Value="0,0,0,0" />
            <Setter Property="Height" Value="24" />
            <Setter Property="VerticalAlignment" Value="Stretch" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="BorderBrush" Value="#FFABADB3" />
            <Setter Property="BorderThickness" Value="0,1,1,0" />
            <Setter Property="Padding" Value="5,3,3,2" />
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip"
                            Value="{Binding (Validation.Errors)[0].ErrorContent, RelativeSource={x:Static RelativeSource.Self}}" />
                </Trigger>
                <DataTrigger Binding="{Binding IsReadOnly, RelativeSource={RelativeSource Self}}" Value="True">
                    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowColorKey}}" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource {x:Type ComboBox}}">
            <Setter Property="Height" Value="24" />
            <Setter Property="Margin" Value="0,0,0,0" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Stretch" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" />
            <Setter Property="BorderBrush" Value="#FFABADB3" />
            <Setter Property="BorderThickness" Value="0,1,1,0" />
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip"
                            Value="{Binding (Validation.Errors)[0].ErrorContent, RelativeSource={x:Static RelativeSource.Self}}" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type DatePicker}">
            <Setter Property="Height" Value="22" />
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip"
                            Value="{Binding (Validation.Errors)[0].ErrorContent, RelativeSource={x:Static RelativeSource.Self}}" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="Required" TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Text, RelativeSource={RelativeSource Self}}" Value="">
                    <Setter Property="BorderBrush" Value="Red" />
                    <Setter Property="BorderThickness" Value="1,1,1,1" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="NumSchmCtrlStyle" TargetType="{x:Type WPF:DSNumSchemeCtrl}">
            <Setter Property="Height" Value="Auto" />
            <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
            <Setter Property="BorderBrush" Value="Gray" />
            <Setter Property="BorderThickness" Value="0,1,1,0" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding EditMode}" Value="True">
                    <Setter Property="Visibility" Value="Collapsed" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="DocTypeStyle" TargetType="{x:Type ComboBox}" BasedOn="{StaticResource {x:Type ComboBox}}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding EditMode}" Value="True">
                    <Setter Property="Visibility" Value="Collapsed" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="TemplateCbStyle" TargetType="{x:Type ComboBox}" BasedOn="{StaticResource {x:Type ComboBox}}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding CreateMode}" Value="True">
                    <Setter Property="ItemsSource" Value="{Binding Templates}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding EditMode}" Value="True">
                    <Setter Property="Visibility" Value="Collapsed" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="ButtonGridStyle" TargetType="{x:Type Grid}">
            <Setter Property="Margin" Value="0,15,2,5" />
        </Style>
        <Style x:Key="ExpanderStyle" TargetType="{x:Type Expander}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding CreateMode}" Value="True">
                    <Setter Property="IsExpanded" Value="False" />
                </DataTrigger>
                <DataTrigger Binding="{Binding HasItems, ElementName=NumSchms}" Value="False">
                    <Setter Property="IsExpanded" Value="True" />
                </DataTrigger>
                <DataTrigger Binding="{Binding EditMode}" Value="True">
                    <Setter Property="IsExpanded" Value="False" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <!-- This XmlDataProvider is used for defining Name/TemplatePath pairs that are used in the combo box "Document Type" and can be easily extended -->
        <XmlDataProvider x:Key="DocTypes"
                         Source="C:\ProgramData\Autodesk\Vault 2019\Extensions\DataStandard\Vault.Custom\Configuration\ADSK.QS.File.xml"
                         XPath="/DocTypeData" />
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    </Window.Resources>
    <WPF:MainWindow.InputBindings>
        <KeyBinding Key="F1" Command="{Binding PsCmd[mHelp(500)]}"/>
    </WPF:MainWindow.InputBindings>
    <TabControl Background="#FFE5E5E5">
        <TabItem  Name="tabProperties" Header="{Binding UIString[MSDCE_MultiTab_01], FallbackValue=Properties}">
            <TabItem.Background>
                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                    <GradientStop Color="#FFF0F0F0" Offset="0"/>
                    <GradientStop Color="#FFF0F0F0" Offset="1"/>
                </LinearGradientBrush>
            </TabItem.Background>
            <Grid x:Name="grdMain" Margin="5" >
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition />
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Grid x:Name="grdGeneralProps" Margin="0"
              ToolTip="{Binding UIString[LBL73], FallbackValue='General Properties'}"
              Width="Auto">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto" />
                        <RowDefinition Height="auto" />
                        <RowDefinition Height="auto" />
                        <RowDefinition Height="auto" />
                        <RowDefinition Height="auto" />
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="auto" />
                        <RowDefinition Height="auto" />
                        <RowDefinition Height="auto" />
                        <RowDefinition Height="auto" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" MinWidth="140" />
                        <ColumnDefinition Width="*"
                                  MinWidth="180" MaxWidth="220" />
                    </Grid.ColumnDefinitions>
                    <Label Content="{Binding UIString[LBL8], FallbackValue=Categories}" Grid.Row="2" Grid.Column="0" />
                    <ComboBox x:Name="Categories" Grid.Row="2" Grid.Column="1"
                      DisplayMemberPath="Name" SelectedItem="{Binding DynamicPropertiesCategory}"
                      SelectedValuePath="Name" SelectedValue="{Binding Prop[_Category].Value}"
                      ItemsSource="{Binding PsList[GetCategories], Mode=OneTime}"
                      IsEnabled="{Binding CreateMode}" />
                    <Label Content="{Binding UIString[LBL23], FallbackValue=DocTypes}" Grid.Column="0"
                   Visibility="{Binding Visibility, ElementName=DocTypeCombo}" />
                    <ComboBox x:Name="DocTypeCombo" Grid.Column="1"
                      IsEnabled="{Binding CreateMode}"
                      DisplayMemberPath="DocName"
                      SelectedValuePath="Path"
                      SelectedValue="{Binding TemplatePath}"
                      SelectedIndex="0"
                      ItemsSource="{Binding Source={StaticResource DocTypes}, XPath=DocTypeInfo, Mode=OneTime}"
                      Style="{StaticResource DocTypeStyle}" />
                    <Label Content="{Binding UIString[LBL9], FallbackValue=Templates}" Grid.Row="1" Grid.Column="0"
                   Visibility="{Binding Visibility, ElementName=TemplateCB}" />
                    <Grid Grid.Row="1" Grid.Column="1">
                        <ComboBox x:Name="TemplateCB" IsSynchronizedWithCurrentItem="True"
                          SelectedItem="{Binding SelectedTemplate}" Style="{StaticResource TemplateCbStyle}" />
                        <TextBlock x:Name="textblock" Text="{Binding UIString[LBL28]}" Margin="1" IsHitTestVisible="False">
                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding SelectedItem, ElementName=TemplateCB}"
                                                   Value="{x:Null}" />
                                                <Condition Binding="{Binding CreateMode}" Value="True" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Visibility" Value="Visible" />
                                            <Setter Property="Background" Value="#F0F0F0" />
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </Grid>
                    <Label Content="{Binding UIString[LBL10],FallbackValue=Numberingscheme}" Grid.Column="0" Grid.Row="3"
                   Visibility="{Binding Visibility, ElementName=NumSchms}" />
                    <ComboBox x:Name="NumSchms" Grid.Column="1" Grid.Row="3"
                      SelectedIndex="0"
                      DisplayMemberPath="Name"
                      SelectedValuePath="Name"
                      SelectedValue="{Binding Prop[_NumSchm].Value}"
                      ItemsSource="{Binding PsList[GetNumSchms], Mode=OneTime}"
                      IsEnabled="{Binding HasItems, RelativeSource={RelativeSource Self}}"
                      Visibility="{Binding NotEditMode, Converter={StaticResource BooleanToVisibilityConverter}}"
                      />
                    <Label Content="{Binding UIString[LBL31], FallbackValue=Number}" Grid.Column="0" Grid.Row="4" Height="Auto"
                   Visibility="{Binding Visibility, ElementName=DSNumSchmsCtrl}" />
                    <WPF:DSNumSchemeCtrl Grid.Column="1" Grid.Row="4" x:Name="DSNumSchmsCtrl"
                                 IsEnabled="{Binding ElementName=NumSchms, Path=IsEnabled}"
                                 Scheme="{Binding ElementName=NumSchms, Path=SelectedItem}"
                                 GeneratedNumberProperty="_GeneratedNumber" Style="{StaticResource NumSchmCtrlStyle}" 
                                 Visibility="{Binding HasItems, ElementName=NumSchms, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                    <Label Content="{Binding UIString[LBL4], FallbackValue=State}" Grid.Column="0" Grid.Row="5" Visibility="{Binding EditMode, Converter={StaticResource BooleanToVisibilityConverter}}" />
                    <TextBox Text="{Binding Prop[_XLTN_STATE].Value}" Grid.Row="5" Grid.Column="1" Visibility="{Binding EditMode, Converter={StaticResource BooleanToVisibilityConverter}}" IsReadOnly="True"/>
                    <Label Content="{Binding UIString[LBL33], FallbackValue=Date Created}" Grid.Column="0" Grid.Row="6" Visibility="{Binding EditMode, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                    <TextBox Text="{Binding Prop[_XLTN_DATE VERSION CREATED].Value}" Grid.Row="6" Grid.Column="1"  Visibility="{Binding EditMode, Converter={StaticResource BooleanToVisibilityConverter}}" IsReadOnly="True"/>
                    <Label Content="{Binding UIString[LBL34], FallbackValue=Created By}" Grid.Column="0" Grid.Row="7" Visibility="{Binding EditMode, Converter={StaticResource BooleanToVisibilityConverter}}" />
                    <TextBox Text="{Binding Prop[_XLTN_CREATED BY].Value}" Grid.Row="7" Grid.Column="1" Visibility="{Binding EditMode, Converter={StaticResource BooleanToVisibilityConverter}}" IsReadOnly="True" />
                    <Label x:Name="lblComments" Content="{Binding UIString[LBL7], FallbackValue=Comments}" Grid.Row="9" Height="Auto" Grid.RowSpan="2" BorderThickness="1" />
                    <TextBox Grid.Row="9" Text="{Binding Prop[_XLTN_COMMENTS].Value}" x:Name="Comments" Grid.Column="1" VerticalScrollBarVisibility="Auto" 
                     Height="Auto" TextWrapping="Wrap" AcceptsReturn="True" VerticalContentAlignment="Top" BorderThickness="0,1,1,1" MinHeight="50" MaxWidth="220" MaxHeight="50" />
                </Grid>
                <DataGrid Grid.Column="1" x:Name="DSDynCatPropGrid" MaxHeight="500"
                  ItemsSource="{Binding DynamicProperties}"
                  ToolTip="{Binding UIString[LBL63], FallbackValue='Category Properties'}"
                  AutoGenerateColumns="False"
                  HeadersVisibility="Column"
                  ScrollViewer.CanContentScroll="True"
                  HorizontalGridLinesBrush="WhiteSmoke"
                  VerticalGridLinesBrush="WhiteSmoke" BorderBrush="Gray" MaxWidth="500"
                  Margin="5,0,0,0">
                    <DataGrid.Columns>
                        <DataGridTextColumn Binding="{Binding Name}" CellStyle="{StaticResource DynamicDataGridLabelStyle}"
                                    MinWidth="140" Width="Auto" IsReadOnly="True">
                            <DataGridTextColumn.HeaderTemplate>
                                <DataTemplate>
                                    <TextBlock
                                Text="{Binding DataContext.UIString[LBL64], RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                </DataTemplate>
                            </DataGridTextColumn.HeaderTemplate>
                        </DataGridTextColumn>
                        <DataGridTextColumn Binding="{Binding Value}" MinWidth="300" Width="*"
                                    CellStyle="{StaticResource DynamicDataGridCellStyle}" IsReadOnly="True">
                            <DataGridTextColumn.HeaderTemplate>
                                <DataTemplate>
                                    <TextBlock
                                Text="{Binding DataContext.UIString[LBL65], RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                </DataTemplate>
                            </DataGridTextColumn.HeaderTemplate>
                        </DataGridTextColumn>
                        <DataGridTextColumn CellStyle="{StaticResource DynamicDataGridBtnCellStyle}"/>
                    </DataGrid.Columns>
                </DataGrid>
                <Expander x:Name="expFilePath" Grid.ColumnSpan="2" Header="{Binding UIString[LBL6], FallbackValue='File Name'}" Grid.Row="2"
                  Style="{StaticResource ExpanderStyle}" VerticalAlignment="Bottom">
                    <Grid Background="#FFE5E5E5">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="140"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Label Content="{Binding UIString[LBL5], FallbackValue=Path}" Grid.Column="0"
            		 Grid.Row="1" BorderThickness="1" />
                        <TextBox Text="{WPF:ValidatedBinding Prop[_FilePath].Value}" IsReadOnly="True"
            		IsTabStop="False" Grid.Row="1" Grid.Column="1" BorderThickness="0,1,1,1" />
                        <Label Content="{Binding UIString[LBL6], FallbackValue=Filename}" Grid.Column="0"
            		Visibility="{Binding NumSchmFieldsEmpty, Converter={StaticResource BooleanToVisibilityConverter}, ElementName=DSNumSchmsCtrl}" />
                        <TextBox x:Name="FILENAME" Text="{WPF:ValidatedBinding Name}"
            		IsTabStop="False" Style="{StaticResource Required}"
            		Visibility="{Binding NumSchmFieldsEmpty, Converter={StaticResource BooleanToVisibilityConverter}, ElementName=DSNumSchmsCtrl}" Grid.Column="1" />
                    </Grid>
                </Expander>
                <Grid x:Name="ButtonGrid" Style="{StaticResource ButtonGridStyle}" Grid.Row="4" Grid.ColumnSpan="2" Margin="0,5,2,5">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="80" />
                        <ColumnDefinition />
                        <ColumnDefinition Width="80" />
                        <ColumnDefinition Width="20" />
                        <ColumnDefinition Width="80" />
                    </Grid.ColumnDefinitions>
                    <Button x:Name="btnOK" Content="{Binding UIString[BTN1], FallbackValue=OK}"
                    Command="{Binding CloseWindowCommand, ElementName=FileWindow}" IsEnabled="{Binding IsNotReadonly}"
                    Grid.Column="2" Width="80" Height="24" IsDefault="True" />
                    <Button x:Name="btnEsc" Content="{Binding UIString[BTN2], FallbackValue=Esc}"
                    Command="{Binding CancelWindowCommand, ElementName=FileWindow}" Grid.Column="4" Width="80"
                    HorizontalAlignment="Right" Height="24" IsCancel="True" />
                    <Button x:Name="btnHelp" Content="{Binding UIString[MSDCE_BTN1], FallbackValue=Help}" 
                    Command="{Binding PsCmd[mHelp(500)]}" Height="24" ToolTip="F1" Margin="0" Width="80" />
                </Grid>
                <Expander x:Name="expItemMasterSearch" Grid.Column="2" Header="" ExpandDirection="Right"  IsExpanded="False" Visibility="Collapsed" Grid.RowSpan="4" MinHeight="350" VerticalAlignment="Top" MaxHeight="{Binding ActualHeight, ElementName=grdMain, Mode=OneWay}">
                    <Grid x:Name="grdItemSearchMain" Background="#FFE5E5E5" Margin="10,0,0,0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="24"/>
                            <RowDefinition Height="24"/>
                            <RowDefinition Height="24"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="217*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="140"/>
                            <ColumnDefinition Width="180"/>
                            <ColumnDefinition Width="140"/>
                            <ColumnDefinition Width="180"/>
                        </Grid.ColumnDefinitions>
                        <Grid x:Name="grdItemSearchHeader" Grid.ColumnSpan="4">
                            <Grid.Background>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FF055599" Offset="1"/>
                                    <GradientStop Color="#FF1E92F1"/>
                                </LinearGradientBrush>
                            </Grid.Background>
                            <Image HorizontalAlignment="Left" Source="C:\ProgramData\Autodesk\Vault 2019\Extensions\DataStandard\Vault.Custom\ItemMaster.png" Width="16" Margin="5,0,0,0"/>
                            <TextBlock x:Name="lblItemMaster" TextWrapping="Wrap" Text="{Binding UIString[Adsk.QS.ItemSearch_00], FallbackValue=Item Master}" Margin="21,0,0,0" FontSize="14" Padding="10,5,0,0" Foreground="White" VerticalAlignment="Center" Height="27">
                                <TextBlock.Background>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#FF055599" Offset="1"/>
                                        <GradientStop Color="#FF1E92F1"/>
                                    </LinearGradientBrush>
                                </TextBlock.Background>
                            </TextBlock>
                        </Grid>
                        <Label x:Name="lblItemSearchMultipleProp" Content="{Binding UIString[Adsk.QS.ItemSearch_01], FallbackValue=Multiple Properties}" Height="Auto" Grid.Row="1" BorderThickness="1,1,1,0"/>
                        <Label x:Name="lblItemSearchTitle" Content="{Binding UIString[Adsk.QS.ItemSearch_02], FallbackValue=Title (Item\, ECO)}" Grid.Row="2" Height="Auto" BorderThickness="1,1,1,0"/>
                        <TextBox x:Name="txtItemSearchMultipleProp" Grid.Column="1" Height="Auto" Grid.Row="1" BorderThickness="0,1,0,0"/>
                        <TextBox x:Name="txtItemSearchTitle" Grid.Column="1" Height="Auto" Grid.Row="2" BorderThickness="0,1,0,0"/>
                        <ComboBox x:Name="cmbItemSearchCategory" ItemsSource="{Binding PsList[mGetItemCategories], Mode=OneTime}" Grid.Column="1" Height="Auto" Grid.Row="3" BorderThickness="0,1" IsEditable="True"/>
                        <TextBox x:Name="txtItemSearchNumber" Grid.Column="3" Height="Auto" Grid.Row="1"/>
                        <TextBox x:Name="txtItemSearchDescription" Grid.Column="3" Height="Auto" Grid.Row="2"/>
                        <ComboBox x:Name="cmbItemSearchMaterial" Grid.Column="3" Height="Auto" Grid.Row="3" BorderThickness="0,1,1,1" IsEditable="True"/>
                        <Grid x:Name="grdItemSearchButtons" Grid.Row="4" Grid.ColumnSpan="4" Margin="0,10">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Button x:Name="btnItemSearch" Command="{Binding PsCmd[mGetItemsBySearchCriterias]}" HorizontalAlignment="Left" Height="24" Background="#FFE8E8F0" Margin="0,0,10,0">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <Image Source="C:\ProgramData\Autodesk\Vault 2019\Extensions\DataStandard\Vault.Custom\VaultSearchExec.ico" Width="24" Height="24" StretchDirection="DownOnly"/>
                                    <Label Content="{Binding UIString[Adsk.QS.ItemSearch_07], FallbackValue=Search}" Grid.Column="1" BorderThickness="0"/>
                                </Grid>
                            </Button>
                            <Button x:Name="btnItemSearchClear" Command="{Binding PsCmd[mItemSearchClear]}" HorizontalAlignment="Left" Height="24" Background="#FFE8E8F0" Grid.Column="1" Margin="0,0,10,0">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <Image Source="C:\ProgramData\Autodesk\Vault 2019\Extensions\DataStandard\Vault.Custom\VaultSearchClear.ico" Width="24" Height="24" StretchDirection="DownOnly"/>
                                    <Label Content="{Binding UIString[Adsk.QS.ItemSearch_], FallbackValue=Clear}" Grid.Column="1" BorderThickness="0"/>
                                </Grid>
                            </Button>
                        </Grid>
                        <Label x:Name="lblItemSearchCategory" Content="{Binding UIString[Adsk.QS.ItemSearch_05], FallbackValue=Category Name}" Grid.Row="3" Height="Auto" BorderThickness="1"/>
                        <Label x:Name="lblItemSearchNumber" Content="{Binding UIString[LBL31], FallbackValue=Number}" Grid.Column="2" Grid.Row="1" Height="Auto"/>
                        <Label x:Name="lblItemSearchDescription" Content="{Binding UIString[Adsk.QS.ItemSearch_03], FallbackValue=Description}" Grid.Column="2" Grid.Row="2" Height="Auto"/>
                        <Label x:Name="lblItemSearchMaterial" Content="{Binding UIString[LBL75], FallbackValue=Material}" Grid.Column="2" Grid.Row="3" Height="Auto" BorderThickness="1"/>
                        <TextBox x:Name="txtItemSearchResultMsg" Grid.ColumnSpan="4" Grid.Row="5" TextWrapping="Wrap" Text="" Background="#FFFFFFE1" Height="24" BorderThickness="1,1,1,0"/>
                        <DataGrid x:Name="ItemsFound" AutoGenerateColumns="False" Grid.ColumnSpan="4" Grid.Row="6" Background="White" HorizontalGridLinesBrush="#FFE7E8EC" 
                            VerticalGridLinesBrush="#FFE7E8EC" AlternatingRowBackground="#FFE1F1FB" SelectionMode="Single" CanUserResizeRows="False" IsReadOnly="True" MaxHeight="{Binding MaxHeight, ElementName=DSDynCatPropGrid}">
                            <DataGrid.Columns>
                                <DataGridTextColumn x:Name="ItemSearchNumber" Binding="{Binding Item}" Width="*">
                                    <DataGridTextColumn.HeaderTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding DataContext.UIString[Adsk.QS.ItemSearch_04], FallbackValue=Number, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                        </DataTemplate>
                                    </DataGridTextColumn.HeaderTemplate>
                                </DataGridTextColumn>
                                <DataGridTextColumn x:Name="ItemSearchTitle" Binding="{Binding Title}" Width="*">
                                    <DataGridTextColumn.HeaderTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding DataContext.UIString[Adsk.QS.ItemSearch_02], FallbackValue=Title, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                        </DataTemplate>
                                    </DataGridTextColumn.HeaderTemplate>
                                </DataGridTextColumn>
                                <DataGridTextColumn x:Name="ItemSearchDescription" Binding="{Binding Description}" Width="*">
                                    <DataGridTextColumn.HeaderTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding DataContext.UIString[Adsk.QS.ItemSearch_03], FallbackValue=Description, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                        </DataTemplate>
                                    </DataGridTextColumn.HeaderTemplate>
                                </DataGridTextColumn>
                                <DataGridTextColumn x:Name="ItemSearchMaterial" Binding="{Binding Material}" Width="*">
                                    <DataGridTextColumn.HeaderTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding DataContext.UIString[LBL75], FallbackValue=Material, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                        </DataTemplate>
                                    </DataGridTextColumn.HeaderTemplate>
                                </DataGridTextColumn>
                                <DataGridTextColumn x:Name="ItemSearchCategory" Binding="{Binding Category}" Width="*">
                                    <DataGridTextColumn.HeaderTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding DataContext.UIString[Adsk.QS.ItemSearch_05], FallbackValue=Category, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                        </DataTemplate>
                                    </DataGridTextColumn.HeaderTemplate>
                                </DataGridTextColumn>
                            </DataGrid.Columns>
                        </DataGrid>
                        <Button x:Name="btnItemDataCopy" Grid.Row="7" Margin="0,10,0,5" HorizontalAlignment="Center" IsEnabled="False" 
                            Command="{Binding PsCmd[mCopyItemData]}" Grid.ColumnSpan="4" ToolTipService.ShowOnDisabled="True"
                            ToolTip="{Binding UIString[Adsk.QS.ItemSearch_12]}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Image Source="C:\ProgramData\Autodesk\Vault 2019\Extensions\DataStandard\Vault.Custom\CopyIcon.ico" Width="24" Height="24" StretchDirection="DownOnly"/>
                                <Label x:Name="lblBtnItemDataCopy" Content="{Binding UIString[Adsk.QS.ItemSearch_11], FallbackValue=Copy Item Data}" ToolTip="{Binding UIString[Adsk.QS.ItemSearch_12], FallbackValue=Copy metadata to file property}" Grid.Column="1" BorderThickness="0"/>
                            </Grid>
                        </Button>
                    </Grid>
                </Expander>
            </Grid>
        </TabItem>
        <TabItem x:Name="tabItemProperties" Header="{Binding UIString[Adsk.QS.ItemSearch_28],FallbackValue='Assigned Item'}" HorizontalAlignment="Left" VerticalAlignment="Top">
            <Grid x:Name="grdAssignedItemMain" Background="#FFF0F0F0" Height="{Binding ActualHeight, ElementName=grdMain, Mode=OneWay}" MinWidth="694" Width="{Binding ActualWidth, ElementName=grdMain, Mode=OneWay}" Margin="5" MaxWidth="825">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="120"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <Grid x:Name="grdStatus">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Button x:Name="btnAssignedItemRefresh" Command="{Binding PsCmd[mGetItemByFileFromVault]}">
                        <Image Source="C:\ProgramData\Autodesk\Vault 2019\Extensions\DataStandard\Vault.Custom\Refresh_32.ico" StretchDirection="DownOnly"/>
                    </Button>
                    <TextBox x:Name="txtAssignedItemStatus" Grid.Column="1" Height="Auto" TextWrapping="Wrap" Background="#FFFFFFE1" BorderThickness="1" Padding="5,0,0,0" MinHeight="24"/>
                </Grid>
                <Grid x:Name="grdItemSysProps" Grid.Row="1">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="24"/>
                        <RowDefinition Height="24"/>
                        <RowDefinition Height="24"/>
                        <RowDefinition Height="24"/>
                        <RowDefinition Height="24"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="130"/>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="96"/>
                        <ColumnDefinition Width="130"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Label x:Name="lblRevision" Content="{Binding UIString[LBL12], FallbackValue=Revision}"/>
                    <TextBox x:Name="txtItemRevision" Grid.Column="1" IsReadOnly="True" Background="White"/>
                    <Label x:Name="lblItemNumber" Content="{Binding UIString[LBL31], FallbackValue=Number}" Grid.Row="1"/>
                    <TextBox x:Name="txtItemNumber" Grid.Column="1" Grid.Row="1" TextWrapping="Wrap" IsReadOnly="True" Background="White"/>
                    <Label x:Name="lblItemTitle" Content="{Binding UIString[Adsk.QS.ItemSearch_02], FallbackValue=Title}" Grid.Row="2"/>
                    <TextBox x:Name="txtItemTitle" Grid.Column="1" Grid.Row="2" IsReadOnly="True" Background="White"/>
                    <Label x:Name="lblItemDescription" Content="{Binding UIString[Adsk.QS.ItemSearch_03], FallbackValue=Description}" Grid.Row="3"/>
                    <TextBox x:Name="txtItemDescription" Grid.Column="1" Grid.Row="3" IsReadOnly="True" Background="White"/>
                    <Label x:Name="lblItemUnits" Content="{Binding UIString[Adsk.QS.ItemSearch_23], FallbackValue=Units}"  Grid.Row="4" BorderThickness="1"/>
                    <TextBox x:Name="txtItemUnits" Grid.Column="1" Grid.Row="4" BorderThickness="0,1,1,1" IsReadOnly="True" Background="White"/>
                    <Border x:Name="brdItemThumbnail" Grid.Column="2" Grid.RowSpan="4" BorderThickness="1" BorderBrush="#FFABADB3" Margin="5,0,5,10">
                        <Image x:Name="ItemThumbnail" VerticalAlignment="Top"/>
                    </Border>
                    <Label x:Name="lblItemCategory" Content="{Binding UIString[Adsk.QS.ItemSearch_05], FallbackValue=Category Name}" BorderThickness="1,1,1,0" Grid.Column="3"/>
                    <TextBox x:Name="txtItemCategory" Grid.Column="4" IsReadOnly="True" Background="White" />
                    <Label x:Name="lblItemLfcState" Content="{Binding UIString[LBL14], FallbackValue=Lifecycle State}" Grid.Column="3" Grid.Row="1"/>
                    <TextBox x:Name="txtItemLfcState" Grid.Column="4" Grid.Row="1" IsReadOnly="True" Background="White"/>
                    <Label x:Name="lblItemLastUpdatedBy" Content="{Binding UIString[Adsk.QS.ItemSearch_24], FallbackValue=Last Updated By}" Grid.Column="3" Grid.Row="2"/>
                    <TextBox x:Name="txtItemLastUpdatedBy" Grid.Column="4" Grid.Row="2" IsReadOnly="True" Background="White"/>
                    <Label x:Name="lblItemLastUpdatedDate" Content="{Binding UIString[Adsk.QS.ItemSearch_25], FallbackValue='Last Updated Date                             '}" Grid.Column="3" Grid.Row="3" BorderThickness="1"/>
                    <TextBox x:Name="txtItemLastUpdatedDate" Grid.Column="4" Grid.Row="3" BorderThickness="0,1,1,1" IsReadOnly="True" Background="White"/>
                </Grid>
                <DataGrid x:Name="dtgrdItemProps" AutoGenerateColumns="False" CanUserReorderColumns="False" Grid.Row="2" HorizontalGridLinesBrush="#FFABADB3" VerticalGridLinesBrush="#FFABADB3" Margin="0,10,0,0">
                    <DataGrid.Columns>
                        <DataGridTextColumn x:Name="ItemPropName" Binding="{Binding Name, Mode=OneWay}" IsReadOnly="True" Width="Auto">
                            <DataGridTextColumn.HeaderTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding UIString[Adsk.QS.ItemSearch_26], FallbackValue='Property Name'}" />
                                </DataTemplate>
                            </DataGridTextColumn.HeaderTemplate>
                        </DataGridTextColumn>
                        <DataGridTextColumn x:Name="ItemPropValue" Binding="{Binding Value, Mode=OneWay}" IsReadOnly="True" Width="*">
                            <DataGridTextColumn.HeaderTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding UIString[Adsk.QS.ItemSearch_27], FallbackValue='Property Value'}" />
                                </DataTemplate>
                            </DataGridTextColumn.HeaderTemplate>
                        </DataGridTextColumn>
                    </DataGrid.Columns>
                </DataGrid>
            </Grid>
        </TabItem>
    </TabControl>
</WPF:MainWindow>